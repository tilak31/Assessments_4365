# -*- coding: utf-8 -*-
"""LVADSUSR157_LAB 3_ (Clustering)_ Final

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A33xoL9q4p_BScfzpytvFj_OjvOr7HdN
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn import metrics
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import scipy.cluster.hierarchy as hcluster
from sklearn.cluster import AgglomerativeClustering

df = pd.read_csv("/content/customer_segmentation.csv")
df.head()

df.info()

df.describe()

df.isnull().sum()

df.drop('Income',axis = 1 , inplace = True)

df.drop('Education',axis = 1 , inplace = True)

df.corr()

df['Education'].value_counts()

sns.pairplot(df)

df = df.select_dtypes(include=['float64', 'int64']).columns

df.drop('ID', axis=1,inplace=True)

##scaling data
scaling=StandardScaler()
scaled=scaling.fit_transform(df)

scaled_df=pd.DataFrame(scaled,columns=df.columns)

# plot elbow curve

a=[]
K=range(1,10)
for i in K:
    kmean=KMeans(n_clusters=i)
    kmean.fit(df)
    a.append(kmean.inertia_)

plt.plot(K,a,marker='o')
plt.title('Elbow Method',fontsize=15)
plt.xlabel('Number of clusters',fontsize=15)
plt.ylabel('Sum of Squared distance',fontsize=15)
plt.show()

kmeans = KMeans(n_clusters = 3,random_state = 111)
kmeans.fit(scaled_df)

pd.Series(kmeans.labels_).value_counts()

metrics.silhouette_score(scaled_df, kmeans.labels_)

cluster_labels = kmeans.fit_predict(scaled_df)
preds = kmeans.labels_
kmeans_df = pd.DataFrame(df)
kmeans_df['KMeans_Clusters'] = preds
kmeans_df.head(10)

import matplotlib.pyplot as plt
import numpy as np
from sklearn.cluster import DBSCAN
from sklearn import metrics

from sklearn.preprocessing import StandardScaler,LabelEncoder
from sklearn import datasets
import pandas as pd
import seaborn as sns

en = LabelEncoder()
df['status_type'] = en.fit_transform(df['status_type'])
df

